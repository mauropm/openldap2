Index: acinclude.m4
===================================================================
--- acinclude.m4.orig
+++ acinclude.m4
@@ -14,3 +14,16 @@ dnl top-level directory of the distribut
 dnl <http://www.OpenLDAP.org/license.html>.
 divert(-1)
 builtin(include, build/openldap.m4)dnl
+
+# From Ulrich Drepper.
+
+# serial 1
+
+AC_DEFUN([AM_TYPE_PTRDIFF_T],
+  [AC_CACHE_CHECK([for ptrdiff_t], am_cv_type_ptrdiff_t,
+     [AC_TRY_COMPILE([#include <stddef.h>], [ptrdiff_t p],
+		     am_cv_type_ptrdiff_t=yes, am_cv_type_ptrdiff_t=no)])
+   if test $am_cv_type_ptrdiff_t = yes; then
+     AC_DEFINE(HAVE_PTRDIFF_T,1,[Define if system has ptrdiff_t type])
+   fi
+])
Index: build/top.mk
===================================================================
--- build/top.mk.orig
+++ build/top.mk
@@ -37,7 +37,7 @@ libdir = @libdir@
 libexecdir = @libexecdir@
 localstatedir = @localstatedir@
 mandir = @mandir@
-moduledir = @libexecdir@$(ldap_subdir)
+moduledir = @libexecdir@/modules
 sbindir = @sbindir@
 sharedstatedir = @sharedstatedir@
 sysconfdir = @sysconfdir@$(ldap_subdir)
@@ -69,7 +69,7 @@ SHTOOL = $(top_srcdir)/build/shtool
 LIBTOOL = @LIBTOOL@
 LIBRELEASE = @OPENLDAP_LIBRELEASE@
 LIBVERSION = @OPENLDAP_LIBVERSION@
-LTVERSION = -release $(LIBRELEASE) -version-info $(LIBVERSION)
+LTVERSION = -version-info $(LIBVERSION)
 
 # libtool --only flag for libraries: platform specific
 NT_LTONLY_LIB = # --only-$(BUILD_LIBS_DYNAMIC)
Index: configure.in
===================================================================
--- configure.in.orig
+++ configure.in
@@ -2133,7 +2133,7 @@ if test $ol_enable_proctitle != no ; the
 			[have_setproctitle=yes
 			LUTIL_LIBS="$LUTIL_LIBS -lutil"],
 			[have_setproctitle=no
-			LIBOBJS="$LIBOBJS setproctitle.o"
+                        AC_LIBOBJ(setproctitle)
 			LIBSRCS="$LIBSRCS setproctitle.c"])])
 
 	if test $have_setproctitle = yes ; then
Index: build/openldap.m4
===================================================================
--- build/openldap.m4.orig
+++ build/openldap.m4
@@ -65,7 +65,7 @@ dnl AC_VERBOSE(OpenLDAP --with-$1 $ol_wi
 dnl
 dnl ====================================================================
 dnl
-AC_DEFUN(AC_COMPILE_CHECK_SIZEOF,
+AC_DEFUN([AC_COMPILE_CHECK_SIZEOF],
 [changequote(<<, >>)dnl 
 dnl The name to #define. 
 define(<<AC_TYPE_NAME>>, translit(sizeof_$1, [a-z *], [A-Z_P]))dnl 
@@ -173,7 +173,7 @@ fi
 dnl
 dnl --------------------------------------------------------------------
 dnl OpenLDAP version of STDC header check w/ EBCDIC support
-AC_DEFUN(OL_HEADER_STDC,
+AC_DEFUN([OL_HEADER_STDC],
 [AC_REQUIRE_CPP()dnl
 AC_REQUIRE([OL_CPP_EBCDIC])dnl
 AC_CACHE_CHECK([for ANSI C header files], ol_cv_header_stdc,
@@ -315,27 +315,7 @@ dnl Try to locate appropriate library
 AC_DEFUN([OL_BERKELEY_DB_LINK],
 [ol_cv_lib_db=no
 OL_BERKELEY_DB_TRY(ol_cv_db_none)
-OL_BERKELEY_DB_TRY(ol_cv_db_db43,[-ldb43])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_43,[-ldb-43])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4_dot_3,[-ldb-4.3])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4_3,[-ldb-4-3])
-OL_BERKELEY_DB_TRY(ol_cv_db_db42,[-ldb42])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_42,[-ldb-42])
 OL_BERKELEY_DB_TRY(ol_cv_db_db_4_dot_2,[-ldb-4.2])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4_2,[-ldb-4-2])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4,[-ldb-4])
-OL_BERKELEY_DB_TRY(ol_cv_db_db4,[-ldb4])
-OL_BERKELEY_DB_TRY(ol_cv_db_db,[-ldb])
-OL_BERKELEY_DB_TRY(ol_cv_db_db41,[-ldb41])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_41,[-ldb-41])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4_dot_1,[-ldb-4.1])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_4_1,[-ldb-4-1])
-OL_BERKELEY_DB_TRY(ol_cv_db_db3,[-ldb3])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_3,[-ldb-3])
-OL_BERKELEY_DB_TRY(ol_cv_db_db2,[-ldb2])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_2,[-ldb-2])
-OL_BERKELEY_DB_TRY(ol_cv_db_db1,[-ldb1])
-OL_BERKELEY_DB_TRY(ol_cv_db_db_1,[-ldb-1])
 ])
 dnl
 dnl --------------------------------------------------------------------
@@ -1016,7 +996,7 @@ dnl ====================================
 dnl Early MIPS compilers (used in Ultrix 4.2) don't like
 dnl "int x; int *volatile a = &x; *a = 0;"
 dnl 	-- borrowed from PDKSH
-AC_DEFUN(OL_C_VOLATILE,
+AC_DEFUN([OL_C_VOLATILE],
  [AC_CACHE_CHECK(if compiler understands volatile, ol_cv_c_volatile,
     [AC_TRY_COMPILE([int x, y, z;],
       [volatile int a; int * volatile b = x ? &y : &z;
@@ -1052,7 +1032,7 @@ fi
 dnl
 dnl ====================================================================
 dnl Define sig_atomic_t if not defined in signal.h
-AC_DEFUN(OL_TYPE_SIG_ATOMIC_T,
+AC_DEFUN([OL_TYPE_SIG_ATOMIC_T],
  [AC_CACHE_CHECK(for sig_atomic_t, ol_cv_type_sig_atomic_t,
     [AC_TRY_COMPILE([#include <signal.h>], [sig_atomic_t atomic;],
 		ol_cv_type_sig_atomic_t=yes, ol_cv_type_sig_atomic_t=no)])
@@ -1064,7 +1044,7 @@ AC_DEFUN(OL_TYPE_SIG_ATOMIC_T,
 dnl
 dnl ====================================================================
 dnl Define socklen_t if not defined in sys/types.h or sys/socket.h
-AC_DEFUN(OL_TYPE_SOCKLEN_T,
+AC_DEFUN([OL_TYPE_SOCKLEN_T],
  [AC_CACHE_CHECK(for socklen_t, ol_cv_type_socklen_t,
     [AC_TRY_COMPILE([
 #ifdef HAVE_SYS_TYPES_H
@@ -1083,7 +1063,7 @@ AC_DEFUN(OL_TYPE_SOCKLEN_T,
 dnl
 dnl ====================================================================
 dnl Define inet_aton is available
-AC_DEFUN(OL_FUNC_INET_ATON,
+AC_DEFUN([OL_FUNC_INET_ATON],
  [AC_CACHE_CHECK([for inet_aton()], ol_cv_func_inet_aton,
     [AC_TRY_LINK([
 #ifdef HAVE_SYS_TYPES_H
@@ -1110,7 +1090,7 @@ int rc = inet_aton( "255.255.255.255", &
 dnl
 dnl ====================================================================
 dnl check no of arguments for ctime_r
-AC_DEFUN(OL_FUNC_CTIME_R_NARGS,
+AC_DEFUN([OL_FUNC_CTIME_R_NARGS],
  [AC_CACHE_CHECK(number of arguments of ctime_r, ol_cv_func_ctime_r_nargs,
    [AC_TRY_COMPILE([#include <time.h>],
 		[time_t ti; char *buffer; ctime_r(&ti,buffer,32);],
@@ -1145,7 +1125,7 @@ AC_DEFUN(OL_FUNC_CTIME_R_NARGS,
 dnl
 dnl --------------------------------------------------------------------
 dnl check return type of ctime_r()
-AC_DEFUN(OL_FUNC_CTIME_R_TYPE,
+AC_DEFUN([OL_FUNC_CTIME_R_TYPE],
  [AC_CACHE_CHECK(return type of ctime_r, ol_cv_func_ctime_r_type,
    [AC_TRY_COMPILE([#include <time.h>],
 		[extern int (ctime_r)();],
@@ -1157,7 +1137,7 @@ AC_DEFUN(OL_FUNC_CTIME_R_TYPE,
 ])dnl
 dnl ====================================================================
 dnl check no of arguments for gethostbyname_r
-AC_DEFUN(OL_FUNC_GETHOSTBYNAME_R_NARGS,
+AC_DEFUN([OL_FUNC_GETHOSTBYNAME_R_NARGS],
  [AC_CACHE_CHECK(number of arguments of gethostbyname_r,
 	ol_cv_func_gethostbyname_r_nargs,
 	[AC_TRY_COMPILE([#include <sys/types.h>
@@ -1207,7 +1187,7 @@ AC_DEFUN(OL_FUNC_GETHOSTBYNAME_R_NARGS,
 ])dnl
 dnl
 dnl check no of arguments for gethostbyaddr_r
-AC_DEFUN(OL_FUNC_GETHOSTBYADDR_R_NARGS,
+AC_DEFUN([OL_FUNC_GETHOSTBYADDR_R_NARGS],
  [AC_CACHE_CHECK(number of arguments of gethostbyaddr_r,
 	[ol_cv_func_gethostbyaddr_r_nargs],
 	[AC_TRY_COMPILE([#include <sys/types.h>
@@ -1283,7 +1263,7 @@ AC_DEFUN([OL_SASL_COMPAT],
 ])
 dnl ====================================================================
 dnl check for msg_accrights in msghdr
-AC_DEFUN(OL_MSGHDR_MSG_ACCRIGHTS,
+AC_DEFUN([OL_MSGHDR_MSG_ACCRIGHTS],
  [AC_CACHE_CHECK(for msg_accrights in msghdr, ol_cv_msghdr_msg_accrights,
    [AC_TRY_COMPILE([#include <sys/socket.h>],
 		[struct msghdr m; m.msg_accrightslen=0],
Index: build/version.var
===================================================================
--- build/version.var.orig
+++ build/version.var
@@ -17,7 +17,7 @@ ol_major=2
 ol_minor=2
 ol_patch=24
 ol_api_inc=20224
-ol_api_current=7
-ol_api_revision=17
-ol_api_age=0
+ol_api_current=202
+ol_api_revision=24
+ol_api_age=3
 ol_release_date="2005/03/15"
Index: servers/slapd/schema_prep.c
===================================================================
--- servers/slapd/schema_prep.c.orig
+++ servers/slapd/schema_prep.c
@@ -894,6 +894,35 @@ static struct slap_schema_ad_map {
 		NULL, NULL,
 		NULL, NULL, NULL, NULL, NULL,
 		offsetof(struct slap_internal_schema, si_ad_cn) },
+	{ "uid", "( 0.9.2342.19200300.100.1.1 NAME ( 'uid' 'userid' ) "
+			"DESC 'RFC1274: user identifier' "
+			"EQUALITY caseIgnoreMatch "
+			"SUBSTR caseIgnoreSubstringsMatch "
+			"SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )",
+		NULL, 0,
+		NULL, NULL,
+		NULL, NULL, NULL, NULL, NULL,
+		offsetof(struct slap_internal_schema, si_ad_uid) },
+	{ "uidNumber", /* for ldapi:// */
+			"( 1.3.6.1.1.1.1.0 NAME 'uidNumber' "
+			"DESC 'An integer uniquely identifying a user "
+				"in an administrative domain' "
+			"EQUALITY integerMatch "
+			"SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 SINGLE-VALUE )",
+		NULL, 0,
+		NULL, NULL,
+		NULL, NULL, NULL, NULL, NULL,
+		offsetof(struct slap_internal_schema, si_ad_uidNumber) },
+	{ "gidNumber", /* for ldapi:// */
+			"( 1.3.6.1.1.1.1.1 NAME 'gidNumber' "
+			"DESC 'An integer uniquely identifying a group "
+				"in an administrative domain' "
+			"EQUALITY integerMatch "
+			"SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 SINGLE-VALUE )",
+		NULL, 0,
+		NULL, NULL,
+		NULL, NULL, NULL, NULL, NULL,
+		offsetof(struct slap_internal_schema, si_ad_gidNumber) },
 	{ "userPassword", "( 2.5.4.35 NAME 'userPassword' "
 			"DESC 'RFC2256/2307: password of user' "
 			"EQUALITY octetStringMatch "
@@ -945,6 +974,24 @@ static struct slap_schema_ad_map {
 		NULL, NULL, NULL, NULL, NULL,
 		offsetof(struct slap_internal_schema, si_ad_krbName) },
 #endif
+	{ "description", "( 2.5.4.13 NAME 'description' "
+			"DESC 'RFC2256: descriptive information' "
+			"EQUALITY caseIgnoreMatch "
+			"SUBSTR caseIgnoreSubstringsMatch "
+			"SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )",
+		NULL, 0,
+		NULL, NULL,
+		NULL, NULL, NULL, NULL, NULL,
+		offsetof(struct slap_internal_schema, si_ad_description) },
+
+	{ "seeAlso", "( 2.5.4.34 NAME 'seeAlso' "
+			"DESC 'RFC2256: DN of related object' "
+			"SUP distinguishedName )",
+		NULL, 0,
+		NULL, NULL,
+		NULL, NULL, NULL, NULL, NULL,
+		offsetof(struct slap_internal_schema, si_ad_seeAlso) },
+
 	{ NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 }
 };
 
Index: servers/slapd/slap.h
===================================================================
--- servers/slapd/slap.h.orig
+++ servers/slapd/slap.h
@@ -825,6 +825,9 @@ struct slap_internal_schema {
 	AttributeDescription *si_ad_distinguishedName;
 	AttributeDescription *si_ad_name;
 	AttributeDescription *si_ad_cn;
+	AttributeDescription *si_ad_uid;
+	AttributeDescription *si_ad_uidNumber;
+	AttributeDescription *si_ad_gidNumber;
 	AttributeDescription *si_ad_userPassword;
 	AttributeDescription *si_ad_labeledURI;
 #ifdef SLAPD_AUTHPASSWD
@@ -833,6 +836,8 @@ struct slap_internal_schema {
 #ifdef LDAP_API_FEATURE_X_OPENLDAP_V2_KBIND
 	AttributeDescription *si_ad_krbName;
 #endif
+	AttributeDescription *si_ad_description;
+	AttributeDescription *si_ad_seeAlso;
         
 	/* Undefined Attribute Type */
 	AttributeType	*si_at_undefined;
